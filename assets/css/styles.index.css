/*! Generated by Font Squirrel (https://www.fontsquirrel.com) on March 8, 2018 */
@font-face {
  font-family: 'bernier_distressed';
  src: url(https://yuliyavolkova.github.io/portfolio_pages/assets/fonts/bernier/bernierdistressed-regular-webfont.woff2) format("woff2"), url(https://yuliyavolkova.github.io/portfolio_pages/assets/fonts/bernier/bernierdistressed-regular-webfont.woff) format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'bernier';
  src: url(https://yuliyavolkova.github.io/portfolio_pages/assets/fonts/bernier/bernierregular-regular-webfont.woff2) format("woff2"), url(https://yuliyavolkova.github.io/portfolio_pages/assets/fonts/bernier/bernierregular-regular-webfont.woff) format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'bernier_shade';
  src: url(https://yuliyavolkova.github.io/portfolio_pages/assets/fonts/bernier/berniershade-regular-webfont.woff2) format("woff2"), url(https://yuliyavolkova.github.io/portfolio_pages/assets/fonts/bernier/berniershade-regular-webfont.woff) format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'roboto';
  src: url(https://yuliyavolkova.github.io/portfolio_pages/assets/fonts/roboto/roboto-bold-webfont.woff2) format("woff2"), url(https://yuliyavolkova.github.io/portfolio_pages/assets/fonts/roboto/roboto-bold-webfont.woff) format("woff");
  font-weight: 900;
  font-style: normal; }

@font-face {
  font-family: 'roboto';
  src: url(https://yuliyavolkova.github.io/portfolio_pages/assets/fonts/roboto/roboto-bolditalic-webfont.woff2) format("woff2"), url(https://yuliyavolkova.github.io/portfolio_pages/assets/fonts/roboto/roboto-bolditalic-webfont.woff) format("woff");
  font-weight: 900;
  font-style: italic; }

@font-face {
  font-family: 'roboto';
  src: url(https://yuliyavolkova.github.io/portfolio_pages/assets/fonts/roboto/roboto-italic-webfont.woff2) format("woff2"), url(https://yuliyavolkova.github.io/portfolio_pages/assets/fonts/roboto/roboto-italic-webfont.woff) format("woff");
  font-weight: 400;
  font-style: italic; }

@font-face {
  font-family: 'roboto';
  src: url(https://yuliyavolkova.github.io/portfolio_pages/assets/fonts/roboto/roboto-light-webfont.woff2) format("woff2"), url(https://yuliyavolkova.github.io/portfolio_pages/assets/fonts/roboto/roboto-light-webfont.woff) format("woff");
  font-weight: 300;
  font-style: normal; }

@font-face {
  font-family: 'roboto';
  src: url(https://yuliyavolkova.github.io/portfolio_pages/assets/fonts/roboto/roboto-lightitalic-webfont.woff2) format("woff2"), url(https://yuliyavolkova.github.io/portfolio_pages/assets/fonts/roboto/roboto-lightitalic-webfont.woff) format("woff");
  font-weight: 300;
  font-style: italic; }

@font-face {
  font-family: 'roboto';
  src: url(https://yuliyavolkova.github.io/portfolio_pages/assets/fonts/roboto/roboto-medium-webfont.woff2) format("woff2"), url(https://yuliyavolkova.github.io/portfolio_pages/assets/fonts/roboto/roboto-medium-webfont.woff) format("woff");
  font-weight: 500;
  font-style: normal; }

@font-face {
  font-family: 'roboto';
  src: url(https://yuliyavolkova.github.io/portfolio_pages/assets/fonts/roboto/roboto-mediumitalic-webfont.woff2) format("woff2"), url(https://yuliyavolkova.github.io/portfolio_pages/assets/fonts/roboto/roboto-mediumitalic-webfont.woff) format("woff");
  font-weight: 500;
  font-style: italic; }

@font-face {
  font-family: 'roboto';
  src: url(https://yuliyavolkova.github.io/portfolio_pages/assets/fonts/roboto/roboto-regular-webfont.woff2) format("woff2"), url(https://yuliyavolkova.github.io/portfolio_pages/assets/fonts/roboto/roboto-regular-webfont.woff) format("woff");
  font-weight: 400;
  font-style: normal; }

/**
 * Set up a decent box model on the root element
 */
* {
  box-sizing: border-box; }

body, html {
  color: #455a64;
  background-color: #00bfa5;
  font-family: "roboto", "Arial", sans-serif;
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.425rem;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-display: optional;
  position: relative; }
  @media screen and (max-width: 992px) and (min-width: 769px) {
    body, html {
      font-size: 15px; } }
  @media screen and (max-width: 768px) {
    body, html {
      font-size: 14px; } }
  @media screen and (max-width: 480px) {
    body, html {
      font-size: 13px; } }
  @media screen and (max-width: 375px) {
    body, html {
      font-size: 12px; } }

/**
 * Make all elements from the DOM inherit from the parent box-sizing
 * Since `*` has a specificity of 0, it does not override the `html` value
 * making all elements inheriting from the root box-sizing value
 * See: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
 */
*::before,
*::after {
  box-sizing: inherit; }

/**
 * Basic styles for links
 */
a {
  color: white;
  text-decoration: none; }

ul {
  margin: 0;
  padding: 0; }

ul li {
  list-style: none; }

h1, h2, h3, p {
  margin: 0; }

svg {
  fill: currentColor;
  stroke: currentColor; }

button, input, select, textarea {
  font-family: "roboto", "Arial", sans-serif; }

/**
 * Clear inner floats
 */
.clearfix::after {
  clear: both;
  content: '';
  display: table; }

/**
 * Main content containers
 * 1. Make the container full-width with a maximum width
 * 2. Center it in the viewport
 * 3. Leave some space on the edges, especially valuable on small screens
 */
/**
 * Hide text while making it readable for screen readers
 * 1. Needed in WebKit-based browsers because of an implementation bug;
 *    See: https://code.google.com/p/chromium/issues/detail?id=457146
 */
.hide-text {
  overflow: hidden;
  padding: 0;
  /* 1 */
  text-indent: 101%;
  white-space: nowrap;
  display: block; }

/**
 * Hide element while making it readable for screen readers
 * Shamelessly borrowed from HTML5Boilerplate:
 * https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css#L119-L133
 */
.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  /* margin: -1px;*/
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

.l-wrapper {
  width: 100%;
  height: 100%;
  margin: 0;
  position: relative;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  overflow: hidden;
  background-image: url(https://yuliyavolkova.github.io/portfolio_pages/assets/images/decor/bg/montains.jpg);
  background-size: 140% 140%;
  background-repeat: no-repeat; }

.l-login__button {
  position: absolute;
  top: 5%;
  right: 5%; }
  @media screen and (min-width: 1301px) {
    .l-login__button {
      right: 10%; } }
  @media screen and (max-width: 768px) {
    .l-login__button {
      top: 4.5%; } }
  @media screen and (max-width: 480px) {
    .l-login__button {
      position: initial;
      margin: auto 0; } }

.l-welcome {
  margin-bottom: 5%; }
  @media screen and (max-width: 768px) {
    .l-welcome {
      margin-top: auto;
      margin-bottom: 0; } }
  @media screen and (max-width: 480px) {
    .l-welcome {
      margin: auto 0; } }

@media screen and (max-width: 768px) {
  .l-copy {
    margin-top: auto; } }

@media screen and (max-width: 480px) {
  .l-copy {
    margin: auto 0; } }

.c-button {
  min-width: 3.125rem;
  min-height: 2.8125rem;
  font-size: 1rem;
  padding: 0 1.75rem;
  display: inline-block;
  vertical-align: middle;
  background-color: transparent;
  border: 1px solid white;
  transition: background-color 0.2s;
  overflow: hidden;
  border-radius: 0.3125rem;
  outline: none; }
  .c-button:hover {
    background-color: white;
    cursor: pointer; }
  .c-button:hover .c-button__text {
    color: #00bfa5; }

.c-button__text {
  display: block;
  width: 100%;
  height: 100%;
  text-align: center;
  line-height: 2.8125rem;
  font-weight: 500;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  vertical-align: middle;
  color: white;
  transition: color 0.2s; }

.c-welcome {
  background-color: rgba(252, 252, 252, 0.85);
  width: 23.75rem;
  height: 24.6875rem;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-justify-content: flex-end;
      -ms-flex-pack: end;
          justify-content: flex-end;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  border-radius: 0.3125rem; }

.c-welcome__img-wrap {
  width: 8.8125rem;
  height: 8.8125rem;
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  overflow: hidden;
  margin-bottom: 4%;
  border-radius: 50%; }

.c-welcome__img {
  max-width: 100%; }

.c-welcome__content {
  text-align: center;
  max-width: 100%;
  width: 100%; }

.c-welcome__header {
  font-size: 1.75rem;
  font-weight: 500;
  line-height: 1.21;
  margin-bottom: 0.3%; }

.c-welcome__desc {
  font-size: 1rem;
  color: rgba(69, 90, 100, 0.8);
  line-height: 1.5; }

.c-welcome__social {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  margin: 10% 0; }

.c-welcome__social-item {
  height: 1.375rem;
  margin-right: 7%; }
  .c-welcome__social-item:last-child {
    margin-right: 0; }

.c-welcome__social-link {
  display: inline-block;
  height: 100%; }
  .c-welcome__social-link:hover .svg-use {
    opacity: 1; }

.svg-use {
  width: 1.75rem;
  height: 1.375rem;
  transition: opacity 0.6s;
  opacity: 0.5;
  color: #00bfa5; }

.c-welcome__nav {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  background-color: rgba(0, 191, 165, 0.85);
  max-width: 100%;
  width: 100%;
  overflow: hidden;
  border-radius: 0 0 0.3125rem 0.3125rem; }

.c-welcome__nav-item {
  border-left: 1px solid rgba(255, 255, 255, 0.85);
  transition: background-color 0.3s;
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1; }
  .c-welcome__nav-item:hover {
    background-color: rgba(0, 150, 136, 0.85);
    cursor: pointer; }
  .c-welcome__nav-item:first-child {
    border-left: none; }

.c-welcome__nav-link {
  display: inline-block;
  vertical-align: middle;
  text-align: center;
  font-weight: 500;
  width: 100%;
  height: 100%;
  padding: 7% 7%;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  font-size: 1rem;
  color: white; }

.c-copy {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }
  @media screen and (max-width: 480px) {
    .c-copy {
      -webkit-flex-wrap: wrap;
          -ms-flex-wrap: wrap;
              flex-wrap: wrap;
      -webkit-justify-content: center;
          -ms-flex-pack: center;
              justify-content: center;
      text-align: center; } }

.c-copy_item {
  display: inline-block;
  color: white;
  font-weight: 300;
  font-size: 1rem;
  line-height: 6.28; }
  .c-copy_item:after {
    display: inline-block;
    content: '|';
    margin: 0 0.3rem;
    font-size: 1rem;
    font-weight: 300; }
  .c-copy_item:last-child:after {
    display: none; }
  @media screen and (max-width: 480px) {
    .c-copy_item {
      line-height: 1.5; }
      .c-copy_item:first-child {
        width: 100%; }
      .c-copy_item:first-child:after {
        display: none; } }

/*# sourceMappingURL=data:application/json;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/